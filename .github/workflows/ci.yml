name: ci
on: [push, pull_request]
permissions:
  contents: write
jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install UV
        run: pip install uv
      - name: Test UV build
        run: uv build --no-sources
      - name: Test pip install compatibility
        run: pip install .
      - name: Test plugin import
        run: python -c "import obsidian_interactive_graph.plugin; print('Plugin import successful')"

  build:
    name: Build plugin with UV
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install UV
        run: pip install uv
      - name: Build with UV
        run: uv build
      - name: Archive plugin
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  release:
    name: Upload release to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    environment:
      name: pypi
      url: https://pypi.org/p/mkdocs-obsidian-interactive-graph-plugin
    permissions:
      id-token: write
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: List
        run: |
          ls dist
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true

  deploy:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install UV
        run: pip install uv
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: ~/.cache
          restore-keys: |
            mkdocs-material-
      - name: Install plugin with docs dependencies
        run: uv pip install ".[docs]"
      - run: mkdocs gh-deploy --force
